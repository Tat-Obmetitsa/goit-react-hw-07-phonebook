{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/SearchFilter/SearchFilter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","redux/store.js","components/AddContact/AddContact.js","components/ContactList/ContactList.js","components/SearchFilter/SearchFilter.js","components/App/App.js","index.js","components/AddContact/AddContact.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","name","number","contact","post","contactId","delete","getAllContacts","state","contacts","items","getFilter","filter","getIsLoading","loading","filterContacts","createSelector","normalizedFilter","toLowerCase","includes","createReducer","_","payload","id","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","AddContact","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","find","item","toast","configure","error","onSubmit","reset","className","s","form","this","form_label","htmlFor","form__input","type","pattern","title","onChange","form__button","Component","connect","contactsSelectors","contactsOperations","ContactList","fetchContacts","contactList","deleteContact","loadingContacts","form__list","map","form__item","form__list_button","onClick","ev","target","form__label","App","container","container__title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c7bac45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__NVuWT\",\"container__title\":\"App_container__title__2y7MW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__list\":\"ContactList_form__list__2ZM97\",\"form__item\":\"ContactList_form__item__3fMKc\",\"form__list_button\":\"ContactList_form__list_button__Sy1Dk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__label\":\"SearchFilter_form__label__zXGVZ\",\"form__input\":\"SearchFilter_form__input__2ByPZ\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest'\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess'\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest'\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess'\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n  //   .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = ({ name, number }) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n\n};\n\nconst deleteContact = (contactId) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\n// eslint-disable-next-line\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from 'reselect';\n\nconst getIsLoading = (state) => state.contacts.loading;\n\nconst getAllContacts = (state) => state.contacts.items;\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst filterContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n\n// eslint-disable-next-line\nexport default { getIsLoading, getAllContacts, getFilter, filterContacts };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contactsReducer } from './contacts';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\nimport s from '../AddContact/AddContact.module.css';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nclass AddContact extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number} = this.state;\n    const { contacts } = this.props;\n    const oldContact = contacts.find(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    );\n    if (oldContact) {\n      toast.configure();\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n    if (name === '' || number === '') {\n      toast.configure();\n      toast.error('Add another contact name or number');\n      } else {\n        this.props.onSubmit(this.state);\n      }\n\n    this.reset();\n  };\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.form_label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.form__input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label className={s.form_label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            className={s.form__input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"(^\\+?(\\d{1,3})?[- .]?\\(?(?:\\d{2,3})\\)?[- .]?\\d\\d\\d[- .]?\\d\\d\\d\\d$)\"\n            title=\"Номер телефона должен состоять из минимум 9 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n\n        <button type=\"submit\" className={s.form__button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nAddContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (contact) => dispatch(contactsOperations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport s from '../ContactList/ContactList.module.css';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport PropTypes from 'prop-types';\nclass ContactList extends Component {\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    const { contactList, deleteContact, loadingContacts } = this.props;\n    return (\n      <>\n        {loadingContacts && <h1>Loading...</h1>}\n        <ul className={s.form__list}>\n          {contactList.map(({ id, name, number }) => (\n            <li key={id} className={s.form__item}>\n              <span>{name}: </span>\n              <span>{number}</span>\n              <button\n                type=\"button\"\n                className={s.form__list_button}\n                onClick={() => deleteContact(id)}\n              >\n                Delete contact\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst { getIsLoading, filterContacts } = contactsSelectors;\n\nconst mapStateToProps = (state) => ({\n  loadingContacts: getIsLoading(state),\n  contactList: filterContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\nContactList.propTypes = {\n  contactList: PropTypes.array.isRequired,\n  loadingContacts: PropTypes.bool,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\nimport s from './SearchFilter.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst SearchFilter = ({ value, onChange }) => (\n  <label className={s.form__label}>\n    Find contacts by name\n    <input type='text' name='name' value={value} onChange={onChange} className={s.form__input} />\n  </label>\n);\n\nSearchFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (ev) => dispatch(changeFilter(ev.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchFilter);\n","import React from 'react';\nimport s from '../App/App.module.css';\nimport AddContact from '../AddContact/AddContact';\nimport ContactList from '../ContactList/ContactList';\nimport SearchFilter from '../SearchFilter/SearchFilter';\n\nconst App = () => (\n  <div className={s.container}>\n  <h1 className={s.container__title}>Phonebook</h1>\n  <AddContact />\n  <h2 className={s.container__title}>Contacts</h2>\n  <SearchFilter  />\n  <ContactList />\n</div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={'Загружаем'} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__2_O4L\",\"form__label\":\"AddContact_form__label__2Ez81\",\"form__input\":\"AddContact_form__input__2MjyB\",\"form__button\":\"AddContact_form__button__1T4wf\"};"],"sourceRoot":""}